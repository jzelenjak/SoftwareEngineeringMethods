buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.2'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.3.5.RELEASE'
    }
}

subprojects {
    // Ignore microservice folder that acts as parent for all microservices, and is, in itself, not a project
    if (name == 'microservices') return

    repositories {
        mavenCentral()
    }

    // General/Spring
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // Code style
    apply plugin: 'checkstyle'

    // Testing/Coverage
    apply plugin: 'pmd'
    apply plugin: 'jacoco'
    apply plugin: 'info.solidsoft.pitest'

    // Java version
    sourceCompatibility = 11
    targetCompatibility = 11

    // Dependencies
    dependencies {
        implementation 'com.google.code.gson:gson:2.8.9'

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.data:spring-data-jpa:2.6.0'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
        testImplementation('org.assertj:assertj-core:3.14.0')

        implementation 'org.postgresql:postgresql:42.1.4'

        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    }

    // Code style
    checkstyle {
        toolVersion "8.37"
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    }

    // Testing-related
    test {
        useJUnitPlatform()
        jacoco {
            enabled = true
            includes = ['nl.tudelft.sem.*']
            excludes = []
        }
    }

    jacocoTestCoverageVerification() {
        dependsOn test
        violationRules {
            rule {
                enabled = true
                element = 'CLASS'
                includes = ['nl.tudelft.sem.*']

                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.1
                }
            }
        }
    }

    pmd {
        incrementalAnalysis = true
    }

    apply plugin: 'info.solidsoft.pitest'
    pitest {
        //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
        junit5PluginVersion = '0.12'

        targetClasses = ['nl.tudelft.sem.*']  //by default "${project.group}.*"
        pitestVersion = '1.5.1' //not needed when a default PIT version should be used
        threads = 4
        outputFormats = ['XML', 'HTML']
        timestampedReports = false
    }
}
